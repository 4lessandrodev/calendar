"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Subtract = void 0;
const ensure_number_1 = require("./ensure-number");
const is_nan_util_1 = require("./is-nan.util");
const normalize_number_util_1 = require("./normalize-number.util");
const to_decimal_number_util_1 = require("./to-decimal-number.util");
const to_long_number_util_1 = require("./to-long-number.util");
const to_precision_util_1 = require("./to-precision.util");
const Subtract = (valueA, valueB, precision = 5) => {
    const isValueAnumber = typeof valueA === 'number';
    const isValueBnumber = typeof valueB === 'number';
    const isBothNumber = isValueAnumber && isValueBnumber;
    if (!isBothNumber) {
        const isNaNValueA = (0, is_nan_util_1.default)(valueA);
        const isNaNValueB = (0, is_nan_util_1.default)(valueB);
        const isBothNaN = isNaNValueA && isNaNValueB;
        if (isBothNaN)
            return 0;
        if (isNaNValueA)
            return (0, normalize_number_util_1.default)(valueB) * -1;
        if (isNaNValueB)
            return (0, normalize_number_util_1.default)(valueA);
        const result = (0, to_precision_util_1.default)((0, normalize_number_util_1.default)((0, to_decimal_number_util_1.default)((0, to_long_number_util_1.default)((0, normalize_number_util_1.default)(valueA)) - (0, to_long_number_util_1.default)((0, normalize_number_util_1.default)(valueB)))), precision);
        return (0, ensure_number_1.default)(result);
    }
    const result = (0, to_precision_util_1.default)((0, normalize_number_util_1.default)((0, to_decimal_number_util_1.default)((0, to_long_number_util_1.default)(valueA) - (0, to_long_number_util_1.default)(valueB))), precision);
    return (0, ensure_number_1.default)(result);
};
exports.Subtract = Subtract;
exports.default = exports.Subtract;
//# sourceMappingURL=subtract-number.util.js.map